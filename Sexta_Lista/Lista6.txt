https://github.com/pdr-tuche/exercicios_workshop_2023_2/tree/main/7POO

POO significa "Programação Orientada a Objetos". É um paradigma de programação que se baseia na organização do código em "objetos" que possuem dados (atributos) e funcionalidades (métodos) associados. A POO é uma abordagem que visa modelar o mundo real e os sistemas de maneira mais natural, ao agrupar dados e as operações que podem ser realizadas com esses dados em unidades coesas chamadas objetos.

Os principais conceitos da Programação Orientada a Objetos incluem:

Classe: É um modelo ou plano para criar objetos. Define os atributos e métodos que os objetos criados a partir dela possuirão.

Objeto: Uma instância concreta de uma classe. Possui seus próprios valores para os atributos definidos na classe e pode executar os métodos definidos nela.

Atributo: Variáveis que armazenam informações associadas a um objeto.

Método: Funções que definem as operações que um objeto pode realizar. São as ações que um objeto pode executar.

Encapsulamento: A ideia de que os detalhes internos de um objeto devem ser ocultos de outros objetos. Apenas os métodos definidos na classe devem ser usados para interagir com os atributos.

Herança: Permite criar uma nova classe baseada em uma classe existente. A nova classe herda os atributos e métodos da classe base e pode adicionar ou modificar funcionalidades.

Polimorfismo: Refere-se à capacidade de objetos de classes diferentes responderem a métodos com o mesmo nome, mas comportamentos específicos.

A POO é amplamente usada na programação devido às suas vantagens, como reutilização de código, organização mais estruturada, modelagem mais próxima do mundo real e facilitação da colaboração em projetos maiores.

1 Classe Pessoa Crie uma classe chamada Pessoa que tenha atributos como nome, idade e profissão. Crie um método que imprima uma saudação com as informações da pessoa.

2 Classe Conta Bancária Crie uma classe chamada ContaBancaria que tenha atributos como titular, saldo e métodos para depositar e sacar dinheiro.

3 Classe Carro Crie uma classe chamada Carro com atributos como marca, modelo e ano. Crie um método para acelerar o carro.

4 Herança de Formas Geométricas Crie uma classe base chamada FormaGeometrica com um método para calcular a área. Em seguida, crie subclasses como Retangulo e Circulo que herdam de FormaGeometrica e implementam seus próprios métodos para calcular a área.

5 polimorfism Crie uma classe base chamada Animal com métodos para emitir um som e mostrar informações gerais. Crie subclasses como Cachorro e Gato que herdam de Animal e implementam seus próprios métodos para emitir sons específicos.